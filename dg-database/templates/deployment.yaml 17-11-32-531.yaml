apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.image }}
          imagePullPolicy: Always
          env:
          - name: POSTGRES_DB
            valueFrom: 
              secretKeyRef:
                name: dg-app-secrets
                key: db_name
          - name: POSTGRES_USER
            valueFrom: 
              secretKeyRef:
                name: dg-app-secrets
                key: db_user
          - name: POSTGRES_PASSWORD
            valueFrom: 
              secretKeyRef:
                name: dg-app-secrets
                key: db_password
          volumeMounts:
          - name: dg-app-postgres-data-volume
            mountPath: "/var/lib/postgresql/data/"    
          ports:
            - containerPort: {{ .Values.containerPort }}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
  volumeClaimTemplates:
  - metadata:
      name: dg-app-postgres-data-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: manual
      resources:
        requests:
          storage: 1Gi
